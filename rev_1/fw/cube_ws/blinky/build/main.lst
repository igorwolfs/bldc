ARM GAS  /tmp/ccwuipyJ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB125:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccwuipyJ.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /**
  61:Core/Src/main.c ****   * @brief  The application entry point.
  62:Core/Src/main.c ****   * @retval int
  63:Core/Src/main.c ****   */
  64:Core/Src/main.c **** int main(void)
  65:Core/Src/main.c **** {
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c ****   /* USER CODE END 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  73:Core/Src/main.c ****   HAL_Init();
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE END Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* Configure the system clock */
  80:Core/Src/main.c ****   SystemClock_Config();
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Initialize all configured peripherals */
  87:Core/Src/main.c ****   MX_GPIO_Init();
  88:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
ARM GAS  /tmp/ccwuipyJ.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END 2 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Infinite loop */
  93:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  94:Core/Src/main.c ****   volatile int set=1;
  95:Core/Src/main.c ****   while (1)
  96:Core/Src/main.c ****   {
  97:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  98:Core/Src/main.c ****     HAL_Delay(1000);
  99:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 100:Core/Src/main.c ****     HAL_Delay(1000);
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****     /* USER CODE END WHILE */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 105:Core/Src/main.c ****   }
 106:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 107:Core/Src/main.c ****   /* USER CODE END 3 */
 108:Core/Src/main.c **** }
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /**
 111:Core/Src/main.c ****   * @brief System Clock Configuration
 112:Core/Src/main.c ****   * @retval None
 113:Core/Src/main.c ****   */
 114:Core/Src/main.c **** void SystemClock_Config(void)
 115:Core/Src/main.c **** {
 116:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 117:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 120:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 121:Core/Src/main.c ****   */
 122:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 126:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 127:Core/Src/main.c ****   {
 128:Core/Src/main.c ****     Error_Handler();
 129:Core/Src/main.c ****   }
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 134:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 135:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 136:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 137:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 138:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 141:Core/Src/main.c ****   {
 142:Core/Src/main.c ****     Error_Handler();
 143:Core/Src/main.c ****   }
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /** Enables the Clock Security System
ARM GAS  /tmp/ccwuipyJ.s 			page 4


 146:Core/Src/main.c ****   */
 147:Core/Src/main.c ****   HAL_RCC_EnableCSS();
 148:Core/Src/main.c **** }
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** /**
 151:Core/Src/main.c ****   * @brief GPIO Initialization Function
 152:Core/Src/main.c ****   * @param None
 153:Core/Src/main.c ****   * @retval None
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c **** static void MX_GPIO_Init(void)
 156:Core/Src/main.c **** {
  28              		.loc 1 156 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 88B0     		sub	sp, sp, #32
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
 157:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 157 3 view .LVU1
  43              		.loc 1 157 20 is_stmt 0 view .LVU2
  44 0004 0024     		movs	r4, #0
  45 0006 0394     		str	r4, [sp, #12]
  46 0008 0494     		str	r4, [sp, #16]
  47 000a 0594     		str	r4, [sp, #20]
  48 000c 0694     		str	r4, [sp, #24]
  49 000e 0794     		str	r4, [sp, #28]
 158:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 159:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 162:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 162 3 is_stmt 1 view .LVU3
  51              	.LBB4:
  52              		.loc 1 162 3 view .LVU4
  53              		.loc 1 162 3 view .LVU5
  54 0010 204B     		ldr	r3, .L3
  55 0012 5A69     		ldr	r2, [r3, #20]
  56 0014 42F40022 		orr	r2, r2, #524288
  57 0018 5A61     		str	r2, [r3, #20]
  58              		.loc 1 162 3 view .LVU6
  59 001a 5A69     		ldr	r2, [r3, #20]
  60 001c 02F40022 		and	r2, r2, #524288
  61 0020 0092     		str	r2, [sp]
  62              		.loc 1 162 3 view .LVU7
  63 0022 009A     		ldr	r2, [sp]
  64              	.LBE4:
  65              		.loc 1 162 3 view .LVU8
 163:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  66              		.loc 1 163 3 view .LVU9
ARM GAS  /tmp/ccwuipyJ.s 			page 5


  67              	.LBB5:
  68              		.loc 1 163 3 view .LVU10
  69              		.loc 1 163 3 view .LVU11
  70 0024 5A69     		ldr	r2, [r3, #20]
  71 0026 42F48002 		orr	r2, r2, #4194304
  72 002a 5A61     		str	r2, [r3, #20]
  73              		.loc 1 163 3 view .LVU12
  74 002c 5A69     		ldr	r2, [r3, #20]
  75 002e 02F48002 		and	r2, r2, #4194304
  76 0032 0192     		str	r2, [sp, #4]
  77              		.loc 1 163 3 view .LVU13
  78 0034 019A     		ldr	r2, [sp, #4]
  79              	.LBE5:
  80              		.loc 1 163 3 view .LVU14
 164:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  81              		.loc 1 164 3 view .LVU15
  82              	.LBB6:
  83              		.loc 1 164 3 view .LVU16
  84              		.loc 1 164 3 view .LVU17
  85 0036 5A69     		ldr	r2, [r3, #20]
  86 0038 42F40032 		orr	r2, r2, #131072
  87 003c 5A61     		str	r2, [r3, #20]
  88              		.loc 1 164 3 view .LVU18
  89 003e 5B69     		ldr	r3, [r3, #20]
  90 0040 03F40033 		and	r3, r3, #131072
  91 0044 0293     		str	r3, [sp, #8]
  92              		.loc 1 164 3 view .LVU19
  93 0046 029B     		ldr	r3, [sp, #8]
  94              	.LBE6:
  95              		.loc 1 164 3 view .LVU20
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 167:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  96              		.loc 1 167 3 view .LVU21
  97 0048 134E     		ldr	r6, .L3+4
  98 004a 2246     		mov	r2, r4
  99 004c 4FF40051 		mov	r1, #8192
 100 0050 3046     		mov	r0, r6
 101 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 102              	.LVL0:
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 170:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, GPIO_PIN_RESET);
 103              		.loc 1 170 3 view .LVU22
 104 0056 2246     		mov	r2, r4
 105 0058 4FF40071 		mov	r1, #512
 106 005c 4FF09040 		mov	r0, #1207959552
 107 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 108              	.LVL1:
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 173:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 109              		.loc 1 173 3 view .LVU23
 110              		.loc 1 173 23 is_stmt 0 view .LVU24
 111 0064 4FF40053 		mov	r3, #8192
 112 0068 0393     		str	r3, [sp, #12]
 174:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  /tmp/ccwuipyJ.s 			page 6


 113              		.loc 1 174 3 is_stmt 1 view .LVU25
 114              		.loc 1 174 24 is_stmt 0 view .LVU26
 115 006a 0125     		movs	r5, #1
 116 006c 0495     		str	r5, [sp, #16]
 175:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 117              		.loc 1 175 3 is_stmt 1 view .LVU27
 118              		.loc 1 175 24 is_stmt 0 view .LVU28
 119 006e 0594     		str	r4, [sp, #20]
 176:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 120              		.loc 1 176 3 is_stmt 1 view .LVU29
 121              		.loc 1 176 25 is_stmt 0 view .LVU30
 122 0070 0694     		str	r4, [sp, #24]
 177:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 123              		.loc 1 177 3 is_stmt 1 view .LVU31
 124 0072 03A9     		add	r1, sp, #12
 125 0074 3046     		mov	r0, r6
 126 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 127              	.LVL2:
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /*Configure GPIO pin : PA9 */
 180:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_9;
 128              		.loc 1 180 3 view .LVU32
 129              		.loc 1 180 23 is_stmt 0 view .LVU33
 130 007a 4FF40073 		mov	r3, #512
 131 007e 0393     		str	r3, [sp, #12]
 181:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 132              		.loc 1 181 3 is_stmt 1 view .LVU34
 133              		.loc 1 181 24 is_stmt 0 view .LVU35
 134 0080 0495     		str	r5, [sp, #16]
 182:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 135              		.loc 1 182 3 is_stmt 1 view .LVU36
 136              		.loc 1 182 24 is_stmt 0 view .LVU37
 137 0082 0594     		str	r4, [sp, #20]
 183:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 138              		.loc 1 183 3 is_stmt 1 view .LVU38
 139              		.loc 1 183 25 is_stmt 0 view .LVU39
 140 0084 0694     		str	r4, [sp, #24]
 184:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 141              		.loc 1 184 3 is_stmt 1 view .LVU40
 142 0086 03A9     		add	r1, sp, #12
 143 0088 4FF09040 		mov	r0, #1207959552
 144 008c FFF7FEFF 		bl	HAL_GPIO_Init
 145              	.LVL3:
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 187:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 188:Core/Src/main.c **** }
 146              		.loc 1 188 1 is_stmt 0 view .LVU41
 147 0090 08B0     		add	sp, sp, #32
 148              	.LCFI2:
 149              		.cfi_def_cfa_offset 16
 150              		@ sp needed
 151 0092 70BD     		pop	{r4, r5, r6, pc}
 152              	.L4:
 153              		.align	2
 154              	.L3:
 155 0094 00100240 		.word	1073876992
ARM GAS  /tmp/ccwuipyJ.s 			page 7


 156 0098 00080048 		.word	1207961600
 157              		.cfi_endproc
 158              	.LFE125:
 160              		.section	.text.Error_Handler,"ax",%progbits
 161              		.align	1
 162              		.global	Error_Handler
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 167              	Error_Handler:
 168              	.LFB126:
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** /* USER CODE END 4 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** /**
 195:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 196:Core/Src/main.c ****   * @retval None
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c **** void Error_Handler(void)
 199:Core/Src/main.c **** {
 169              		.loc 1 199 1 is_stmt 1 view -0
 170              		.cfi_startproc
 171              		@ Volatile: function does not return.
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 200:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 201:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 202:Core/Src/main.c ****   __disable_irq();
 175              		.loc 1 202 3 view .LVU43
 176              	.LBB7:
 177              	.LBI7:
 178              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
ARM GAS  /tmp/ccwuipyJ.s 			page 8


  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccwuipyJ.s 			page 9


  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
ARM GAS  /tmp/ccwuipyJ.s 			page 10


 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 179              		.loc 2 140 27 view .LVU44
 180              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 181              		.loc 2 142 3 view .LVU45
 182              		.syntax unified
 183              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 184 0000 72B6     		cpsid i
 185              	@ 0 "" 2
 186              		.thumb
 187              		.syntax unified
 188              	.L6:
 189              	.LBE8:
 190              	.LBE7:
 203:Core/Src/main.c ****   while (1)
 191              		.loc 1 203 3 discriminator 1 view .LVU46
 204:Core/Src/main.c ****   {
 205:Core/Src/main.c ****   }
 192              		.loc 1 205 3 discriminator 1 view .LVU47
 203:Core/Src/main.c ****   while (1)
 193              		.loc 1 203 9 discriminator 1 view .LVU48
 194 0002 FEE7     		b	.L6
 195              		.cfi_endproc
 196              	.LFE126:
 198              		.section	.text.SystemClock_Config,"ax",%progbits
 199              		.align	1
 200              		.global	SystemClock_Config
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 205              	SystemClock_Config:
 206              	.LFB124:
 115:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 207              		.loc 1 115 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 64
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211 0000 00B5     		push	{lr}
 212              	.LCFI3:
 213              		.cfi_def_cfa_offset 4
 214              		.cfi_offset 14, -4
 215 0002 91B0     		sub	sp, sp, #68
 216              	.LCFI4:
 217              		.cfi_def_cfa_offset 72
 116:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 218              		.loc 1 116 3 view .LVU50
 116:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 219              		.loc 1 116 22 is_stmt 0 view .LVU51
 220 0004 2822     		movs	r2, #40
 221 0006 0021     		movs	r1, #0
 222 0008 06A8     		add	r0, sp, #24
 223 000a FFF7FEFF 		bl	memset
 224              	.LVL4:
ARM GAS  /tmp/ccwuipyJ.s 			page 11


 117:Core/Src/main.c **** 
 225              		.loc 1 117 3 is_stmt 1 view .LVU52
 117:Core/Src/main.c **** 
 226              		.loc 1 117 22 is_stmt 0 view .LVU53
 227 000e 0023     		movs	r3, #0
 228 0010 0193     		str	r3, [sp, #4]
 229 0012 0293     		str	r3, [sp, #8]
 230 0014 0393     		str	r3, [sp, #12]
 231 0016 0493     		str	r3, [sp, #16]
 232 0018 0593     		str	r3, [sp, #20]
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 233              		.loc 1 122 3 is_stmt 1 view .LVU54
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 234              		.loc 1 122 36 is_stmt 0 view .LVU55
 235 001a 0123     		movs	r3, #1
 236 001c 0693     		str	r3, [sp, #24]
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 237              		.loc 1 123 3 is_stmt 1 view .LVU56
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 238              		.loc 1 123 30 is_stmt 0 view .LVU57
 239 001e 4FF48032 		mov	r2, #65536
 240 0022 0792     		str	r2, [sp, #28]
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 241              		.loc 1 124 3 is_stmt 1 view .LVU58
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 242              		.loc 1 124 30 is_stmt 0 view .LVU59
 243 0024 0A93     		str	r3, [sp, #40]
 125:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 244              		.loc 1 125 3 is_stmt 1 view .LVU60
 126:Core/Src/main.c ****   {
 245              		.loc 1 126 3 view .LVU61
 126:Core/Src/main.c ****   {
 246              		.loc 1 126 7 is_stmt 0 view .LVU62
 247 0026 06A8     		add	r0, sp, #24
 248 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 249              	.LVL5:
 126:Core/Src/main.c ****   {
 250              		.loc 1 126 6 view .LVU63
 251 002c 80B9     		cbnz	r0, .L11
 133:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 252              		.loc 1 133 3 is_stmt 1 view .LVU64
 133:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 253              		.loc 1 133 31 is_stmt 0 view .LVU65
 254 002e 0F23     		movs	r3, #15
 255 0030 0193     		str	r3, [sp, #4]
 135:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 256              		.loc 1 135 3 is_stmt 1 view .LVU66
 135:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 257              		.loc 1 135 34 is_stmt 0 view .LVU67
 258 0032 0123     		movs	r3, #1
 259 0034 0293     		str	r3, [sp, #8]
 136:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 260              		.loc 1 136 3 is_stmt 1 view .LVU68
 136:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 261              		.loc 1 136 35 is_stmt 0 view .LVU69
 262 0036 0021     		movs	r1, #0
 263 0038 0391     		str	r1, [sp, #12]
ARM GAS  /tmp/ccwuipyJ.s 			page 12


 137:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 264              		.loc 1 137 3 is_stmt 1 view .LVU70
 137:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 265              		.loc 1 137 36 is_stmt 0 view .LVU71
 266 003a 0491     		str	r1, [sp, #16]
 138:Core/Src/main.c **** 
 267              		.loc 1 138 3 is_stmt 1 view .LVU72
 138:Core/Src/main.c **** 
 268              		.loc 1 138 36 is_stmt 0 view .LVU73
 269 003c 0591     		str	r1, [sp, #20]
 140:Core/Src/main.c ****   {
 270              		.loc 1 140 3 is_stmt 1 view .LVU74
 140:Core/Src/main.c ****   {
 271              		.loc 1 140 7 is_stmt 0 view .LVU75
 272 003e 01A8     		add	r0, sp, #4
 273 0040 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 274              	.LVL6:
 140:Core/Src/main.c ****   {
 275              		.loc 1 140 6 view .LVU76
 276 0044 30B9     		cbnz	r0, .L12
 147:Core/Src/main.c **** }
 277              		.loc 1 147 3 is_stmt 1 view .LVU77
 278 0046 FFF7FEFF 		bl	HAL_RCC_EnableCSS
 279              	.LVL7:
 148:Core/Src/main.c **** 
 280              		.loc 1 148 1 is_stmt 0 view .LVU78
 281 004a 11B0     		add	sp, sp, #68
 282              	.LCFI5:
 283              		.cfi_remember_state
 284              		.cfi_def_cfa_offset 4
 285              		@ sp needed
 286 004c 5DF804FB 		ldr	pc, [sp], #4
 287              	.L11:
 288              	.LCFI6:
 289              		.cfi_restore_state
 128:Core/Src/main.c ****   }
 290              		.loc 1 128 5 is_stmt 1 view .LVU79
 291 0050 FFF7FEFF 		bl	Error_Handler
 292              	.LVL8:
 293              	.L12:
 142:Core/Src/main.c ****   }
 294              		.loc 1 142 5 view .LVU80
 295 0054 FFF7FEFF 		bl	Error_Handler
 296              	.LVL9:
 297              		.cfi_endproc
 298              	.LFE124:
 300              		.section	.text.main,"ax",%progbits
 301              		.align	1
 302              		.global	main
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 307              	main:
 308              	.LFB123:
  65:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 309              		.loc 1 65 1 view -0
 310              		.cfi_startproc
ARM GAS  /tmp/ccwuipyJ.s 			page 13


 311              		@ Volatile: function does not return.
 312              		@ args = 0, pretend = 0, frame = 8
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314 0000 00B5     		push	{lr}
 315              	.LCFI7:
 316              		.cfi_def_cfa_offset 4
 317              		.cfi_offset 14, -4
 318 0002 83B0     		sub	sp, sp, #12
 319              	.LCFI8:
 320              		.cfi_def_cfa_offset 16
  73:Core/Src/main.c **** 
 321              		.loc 1 73 3 view .LVU82
 322 0004 FFF7FEFF 		bl	HAL_Init
 323              	.LVL10:
  80:Core/Src/main.c **** 
 324              		.loc 1 80 3 view .LVU83
 325 0008 FFF7FEFF 		bl	SystemClock_Config
 326              	.LVL11:
  87:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 327              		.loc 1 87 3 view .LVU84
 328 000c FFF7FEFF 		bl	MX_GPIO_Init
 329              	.LVL12:
  94:Core/Src/main.c ****   while (1)
 330              		.loc 1 94 3 view .LVU85
  94:Core/Src/main.c ****   while (1)
 331              		.loc 1 94 16 is_stmt 0 view .LVU86
 332 0010 0123     		movs	r3, #1
 333 0012 0193     		str	r3, [sp, #4]
 334              	.L14:
  95:Core/Src/main.c ****   {
 335              		.loc 1 95 3 is_stmt 1 discriminator 1 view .LVU87
  97:Core/Src/main.c ****     HAL_Delay(1000);
 336              		.loc 1 97 5 discriminator 1 view .LVU88
 337 0014 0A4C     		ldr	r4, .L16
 338 0016 0022     		movs	r2, #0
 339 0018 4FF40051 		mov	r1, #8192
 340 001c 2046     		mov	r0, r4
 341 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 342              	.LVL13:
  98:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 343              		.loc 1 98 5 discriminator 1 view .LVU89
 344 0022 4FF47A70 		mov	r0, #1000
 345 0026 FFF7FEFF 		bl	HAL_Delay
 346              	.LVL14:
  99:Core/Src/main.c ****     HAL_Delay(1000);
 347              		.loc 1 99 5 discriminator 1 view .LVU90
 348 002a 0122     		movs	r2, #1
 349 002c 4FF40051 		mov	r1, #8192
 350 0030 2046     		mov	r0, r4
 351 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 352              	.LVL15:
 100:Core/Src/main.c **** 
 353              		.loc 1 100 5 discriminator 1 view .LVU91
 354 0036 4FF47A70 		mov	r0, #1000
 355 003a FFF7FEFF 		bl	HAL_Delay
 356              	.LVL16:
  95:Core/Src/main.c ****   {
ARM GAS  /tmp/ccwuipyJ.s 			page 14


 357              		.loc 1 95 9 discriminator 1 view .LVU92
 358 003e E9E7     		b	.L14
 359              	.L17:
 360              		.align	2
 361              	.L16:
 362 0040 00080048 		.word	1207961600
 363              		.cfi_endproc
 364              	.LFE123:
 366              		.text
 367              	.Letext0:
 368              		.file 3 "/opt/arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 369              		.file 4 "/opt/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 370              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 371              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 372              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 373              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 374              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 375              		.file 10 "<built-in>"
ARM GAS  /tmp/ccwuipyJ.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccwuipyJ.s:21     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccwuipyJ.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccwuipyJ.s:155    .text.MX_GPIO_Init:00000094 $d
     /tmp/ccwuipyJ.s:161    .text.Error_Handler:00000000 $t
     /tmp/ccwuipyJ.s:167    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccwuipyJ.s:199    .text.SystemClock_Config:00000000 $t
     /tmp/ccwuipyJ.s:205    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccwuipyJ.s:301    .text.main:00000000 $t
     /tmp/ccwuipyJ.s:307    .text.main:00000000 main
     /tmp/ccwuipyJ.s:362    .text.main:00000040 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_EnableCSS
HAL_Init
HAL_Delay
